@using Microsoft.Extensions.Options
@using bodyline_sports.Models
@using bodyline_sports.Options
@using bodyline_sports.Services

@inject IFacebook facebookService
@inject IOptions<FacebookOptions> options
@inject ILogger<Logo> logger    

@foreach (var post in Posts)
{
    <article class="p-2 bg-white rounded-xl shadow-md basis-4/5 shadow-black h-min [overflow-wrap:anywhere]">
        <p class="text-xs">@post.UpdatedDateTime.LocalDateTime.ToString(@"dd MMMM \a\t HH:mm")</p>
        <p class="pt-1">@((MarkupString?)(post.Message?.Replace("\n", "<br />") ?? string.Empty))</p>
        @if (post.Attachments is not null)
        {
            @if (post.Attachments.Data[0].SubAttachments is not null)
            {
                <FacebookPostsMultipleImages SubAttachmentsDatas="post.Attachments.Data[0].SubAttachments!.Data" />
            }
            else
            {
                <FacebookPostsImage AttachmentsData="post.Attachments.Data[0]" />
            }
        }
    </article>
}

@code {
    private Post[] Posts { get; set; } = [];

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var group = await facebookService.GetGroup(options.Value.GroupId);
            if (group is not null)
            {
                Posts = await facebookService.GetGroupPosts(group);
            }
        }
        catch (HttpRequestException e)
        {
            logger.LogError(e, "{exceptionMessage} getting group details for {groupId}", e.Message, options.Value.GroupId);
        }

    }
}